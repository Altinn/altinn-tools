name: Apps.Monitoring deploy

on:
  workflow_dispatch:
  push:
    paths:
      - AppsMonitoring/**
    branches:
      - main

jobs:
  deploy:

    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
    defaults:
      run:
        working-directory: ./AppsMonitoring

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: flux install
        uses: fluxcd/flux2/action@8d9cbe7693cde4200b70e9ae4749cecb47d3f445 # No tag
        with:
          version: '2.5.1'

      - name: set vars
        id: vars
        run: |
          echo "registry=altinncr.azurecr.io" >> $GITHUB_OUTPUT
          echo "image=altinncr.azurecr.io/apps-monitor/image:$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "image_tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: az login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.ALTINNCR_SUBSCRIPTION_ID }}

      - name: az acr login
        uses: azure/cli@089eac9d8cc39f5d003e94f8b65efc51076c9cbd # v2.1.0
        with:
          inlineScript: |
            az acr login --name altinncr

      - name: docker build
        run: docker build -t ${{ steps.vars.outputs.image }} -f src/Altinn.Apps.Monitoring/Dockerfile .

      - name: scan image
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        with:
          image-ref: '${{ steps.vars.outputs.image }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: push image
        run: docker push ${{ steps.vars.outputs.image }}

      - name: yq install
        uses: mikefarah/yq@b534aa9ee5d38001fba3cd8fe254a037e4847b37 # v4.45.4

      - name: patch base with image tag
        run: |
          export APP_IMAGE="${{ steps.vars.outputs.image }}"
          export APP_IMAGE_TAG="${{ steps.vars.outputs.image_tag }}"
          yq -i '.metadata.annotations["altinn.no/image"] = env(APP_IMAGE)' infra/deployment/base/deployment.yaml
          yq -i '.metadata.annotations["altinn.no/image-tag"] = env(APP_IMAGE_TAG)' infra/deployment/base/deployment.yaml

      - name: push deployment
        run: |
          flux push artifact oci://${{ steps.vars.outputs.registry }}/apps-monitor/config:${{ steps.vars.outputs.image_tag }} \
              --provider=generic \
              --reproducible \
              --path="." \
              --source="$(git config --get remote.origin.url)" \
              --revision="$(git branch --show-current)/${{ steps.vars.outputs.image_tag }}"
          flux tag artifact oci://${{ steps.vars.outputs.registry }}/apps-monitor/config:${{ steps.vars.outputs.image_tag }} \
              --provider=generic \
              --tag at24