name: Apps.Monitoring deploy

on:
  workflow_dispatch:

jobs:
  deploy:

    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write # Require write permission to Fetch an OIDC token.
    defaults:
      run:
        working-directory: ./AppsMonitoring

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: flux install
        uses: fluxcd/flux2/action@4a15fa6a023259353ef750acf1c98fe88407d4d0 # v2.7.2
        with:
          version: '2.5.1'

      - name: set vars
        id: vars
        run: |
          echo "registry=altinncr.azurecr.io" >> $GITHUB_OUTPUT
          echo "image=altinncr.azurecr.io/apps-monitor/image:$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "image_tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: az login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.ALTINNCR_SUBSCRIPTION_ID }}

      - name: az acr login
        run: az acr login --name altinncr

      - name: docker build
        run: docker build -t ${{ steps.vars.outputs.image }} -f src/Altinn.Apps.Monitoring/Dockerfile .

      - name: scan image
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          image-ref: '${{ steps.vars.outputs.image }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: push image
        run: docker push ${{ steps.vars.outputs.image }}

      - name: yq install
        uses: mikefarah/yq@0ecdce24e83f0fa127940334be98c86b07b0c488 # v4.48.1

      - name: patch base with image tag
        run: |
          export APP_IMAGE="${{ steps.vars.outputs.image }}"
          export APP_IMAGE_TAG="${{ steps.vars.outputs.image_tag }}"
          yq -i '.metadata.annotations["altinn.no/image"] = env(APP_IMAGE)' infra/deployment/base/deployment.yaml
          yq -i '.metadata.annotations["altinn.no/image-tag"] = env(APP_IMAGE_TAG)' infra/deployment/base/deployment.yaml

      - name: push deployment
        run: |
          cd infra/deployment
          flux push artifact oci://${{ steps.vars.outputs.registry }}/apps-monitor/configs:${{ steps.vars.outputs.image_tag }} \
              --provider=generic \
              --reproducible \
              --path="." \
              --source="$(git config --get remote.origin.url)" \
              --revision="$(git branch --show-current)/${{ steps.vars.outputs.image_tag }}"
          flux tag artifact oci://${{ steps.vars.outputs.registry }}/apps-monitor/configs:${{ steps.vars.outputs.image_tag }} \
              --provider=generic \
              --tag at24